@using KrokodyliWeb.Utils
@inject IJSRuntime js


<div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel" style="max-width: 75vw; max-height: 75vh;">
  <div class="carousel-inner">
    @foreach(var img in ActiveImage.Iterate())
    {var cls = "carousel-item" + (img==ActiveImage ? " active" : "");
        <div class="@cls">
          <img src="@(img.Value.Source)" class="d-block w-100" alt="@(img.Value.Alt)">
        </div>   
    }
  </div>
    @if (!IsSimple)
    {
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    }

</div>


@code {
    [Parameter]
    [EditorRequired]
    public ImageList.View ActiveImage { get; set; }

    private bool IsSimple => ActiveImage.IsSimple;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !this.IsSimple)
        {
            await js.InvokeAsync<object>("eval", @"
    //$('#carouselExampleIndicators').carousel({interval: 2000});

    //see step 2 to understand these news id's:
    $('.carousel-control-prev').click ( 
            () => $('#carouselExampleIndicators').carousel('prev') );
    $('.carousel-control-next').click ( 
            () => $('#carouselExampleIndicators').carousel('next') );");
        }
    }
}
